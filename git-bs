#!/bin/sh
#
# Report branch status for all your tracking branches
#

fetch=''    # -f|--fetch specified
pull=''     # -p|--pull specified

bold="\033[1m"
norm="\033[0m"

function print_status() {
	branch="$1"
	origin=`git config "branch.$branch.remote"`
	remote=`git config "branch.$branch.merge" | sed 's/.*\///'`
	track="$origin/$remote"
	if [ "/" != "$track" ]; then
		set -- `git log --pretty=oneline "$branch..$track" | wc -l`
		behind="$1"
		set -- `git log --pretty=oneline "$track..$branch" | wc -l`
		ahead="$1"
		if [ 0 != "$behind" ] && [ 0 != "$ahead" ]; then
			echo -e "# X $branch and $track have ${bold}diverged${norm} by $ahead and $behind commits"
		elif [ 0 != "$behind" ]; then
			echo -e "# < $branch is ${bold}behind${norm} $track by $behind commits"
			if [ pull = "$pull" ]; then
				echo ""
				echo "> git checkout $branch"
				if git checkout "$branch"; then
					git pull "$origin" "$remote"
				else
					pull=''
				fi
				echo ""
			fi
		elif [ 0 != "$ahead" ]; then
			echo -e "# > $branch is ${bold}ahead${norm} of $track by $ahead commits"
		else
			echo -e "# = $branch is ${bold}current${norm} with $track"
		fi
	fi
}

# TODO: Somebody teach Tye how to use getopt or getopts
# properly as he gave up trying to figure such out.
while [ 0 != "$#" ]; do
	case "$1" in
		-pf|-fp)
			pull=pull
			fetch=fetch
			;;
		-p|--pull)
			pull=pull
			;;
		-f|--fetch)
			fetch=fetch
			;;
		*)
			echo "Unrecognized option ($1). Usage: $0 [-f|--fetch] [-p|--pull]" >&2
			exit
			;;
	esac
	shift
done

if [ fetch = "$fetch" ]; then
	echo '> git fetch'
	git fetch
fi

# Current branch
current_branch=`git branch | grep '*' | sed 's/*//' | sed 's/^ *\| *$//g'`
if [ "z$current_branch" != "z" ]; then
	echo "# On branch $current_branch"
	print_status "$current_branch"

	# A blank line to separate other branches
	echo "#"
fi

# The rest
for branch in `git branch | grep -v '*'`; do
	print_status "$branch"
done

if [ pull = "$pull" ]; then
	git checkout "$current_branch"
fi
