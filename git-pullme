#!/bin/bash
#
# This will fetch and merge only the branch you're currently in, avoiding
# fetches that you aren't interested in and possibly avoiding "non-fast-forward"
# messages on pushes
#

function usage() {
    echo "Usage: git pullme [-r | --no-rebase]" >&2
}

# Default is that we will allow a rebase
rebase_ok=yes

GETOPT=$(getopt -u -o hr --long no-rebase -- "$@")
if [[ $? != 0 ]]; then
    usage
    exit 1
fi
set -- $GETOPT

while [[ 0 != $# ]]; do
    case "$1" in
        -r|--no-rebase)
            rebase_ok=no
            ;;
        -h)
            usage
            exit 0
            ;;
        --)
            shift
            break
            ;;
        *)
            echo "Unrecognized option ($1)??" >&2
            usage
            exit 1
            ;;
    esac
    shift
done

ref=$(git symbolic-ref HEAD 2>/dev/null)
branch=${ref##refs/heads/}

if [[ -z $branch ]]; then
    echo "Not on any branch that I can find!"
    exit 1
fi

remote=$(git config --get "branch.$branch.remote")
merge_ref=$(git config --get "branch.$branch.merge")
merge=${merge_branch##refs/heads/}

if [[ -z $remote || -z $merge ]]; then
    echo 'Your branch is not tracking a remote branch.  Consider using "git corb"'
    exit 1
fi

git pull $remote $branch:refs/remotes/$remote/$merge
